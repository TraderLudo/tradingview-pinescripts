// ©TraderLudo

//@version=5
indicator(title="Weekday separator @TraderLudo", overlay=true)

// ##########
// # INPUTS #
// ##########
var groupGlobalSettings = "Global settings"
maxTimeframe            = input.int    (61, "Hide indicator above specified minutes", group=groupGlobalSettings)
showOnlyCurrentWeek     = input.bool   (true, "Show only current week", group=groupGlobalSettings)

var groupDaySeparator   = "Day separator"
showSeparators          = input.bool   (true, "Show separators", group=groupDaySeparator)
colorSeparators         = input.color  (color.rgb(0,0,0,80), "Color", group=groupDaySeparator)
txtStyleSeparators      = input.string ("dashed (╌)", "Style", ["solid (-)", "dotted (┈)", "dashed (╌)"], group=groupDaySeparator)

var groupDayOfWeek      = "Day of week"
showDaysOfWeek          = input.bool   (true, "Show days of week", group=groupDayOfWeek)
showShortText           = input.bool   (false, "Display days in short version", group=groupDayOfWeek)
positionDaysOfWeek      = input.string (location.bottom, "Position", [location.bottom, location.top], group=groupDayOfWeek)
colorText               = input.color  (color.rgb(0,0,0,50), "Color", group=groupDayOfWeek)

// #########
// # UTILS #
// #########
drawVerticalLine(start, color, linestyle, lineWidth) =>
    line.new(x1=start, y1=low - ta.tr, x2=start, y2=high + ta.tr, xloc=xloc.bar_time, extend=extend.both, color=color, style=linestyle, width=lineWidth)

convertTxtToStyle(txt) =>
    style = txt == "solid (-)" ? line.style_solid : txt == "dotted (┈)" ? line.style_dotted : txt == "dashed (╌)" ? line.style_dashed : line.style_solid
    style

cleanOldDrawings(days, midnightOpenTime) =>
    removeBefore = midnightOpenTime - (days * 86400000)
    allLines = line.all
    allLabels = label.all
    if array.size(allLines) > 0
	    for i = 0 to array.size(allLines) - 1
		    line_x2 = line.get_x2(array.get(allLines, i))
		    if line_x2 < removeBefore
		        line.delete(array.get(allLines, i))

// #############
// # CONSTANTS #
// #############
timeMidnight      = time("1", "0000-0001:1234567", "America/New_York")
midnightOpenTime  = timestamp("America/New_York", year, month, dayofmonth, 0, 0, 0)

newDay            = ta.change(dayofweek)
newWeek           = ta.change(weekofyear)
newMonth          = ta.change(time("M"))

txtMonday         = "M O N D A Y"
txtMondayShort    = "M O N"
txtTuesday        = "T U E S D A Y"
txtTuesdayShort   = "T U E"
txtWednesday      = "W E D N E S D A Y"
txtWednesdayShort = "W E D"
txtThursday       = "T H U R S D A Y"
txtThursdayShort  = "T H U"
txtFriday         = "F R I D A Y"
txtFridayShort    = "F R I"

styleSeparators   = convertTxtToStyle(txtStyleSeparators)

hourToDisplayTxt  = syminfo.type == "futures" ? 11 : syminfo.type == "crypto" ? 17 : 12
isCurrentWeek     = year(timenow) == year(time) and weekofyear(timenow) == weekofyear(time)
displaySeparators = showSeparators and timeframe.multiplier <= maxTimeframe and timeframe.isintraday and newDay and dayofweek != dayofweek.sunday
displayDayTxt     = showDaysOfWeek and timeframe.multiplier <= maxTimeframe and timeframe.isintraday and hour == hourToDisplayTxt and minute == 0

// ########
// # MAIN #
// ########
if displaySeparators
    drawVerticalLine(midnightOpenTime, colorSeparators, styleSeparators, 1)

// LONG DAY NAME
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.monday and isCurrentWeek, offset=0, char=" ", text=txtMonday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.monday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtMonday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.tuesday and isCurrentWeek, offset=0, char=" ", text=txtTuesday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.tuesday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtTuesday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.wednesday and isCurrentWeek, offset=0, char=" ", text=txtWednesday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.wednesday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtWednesday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.thursday and isCurrentWeek, offset=0, char=" ", text=txtThursday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.thursday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtThursday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.friday and isCurrentWeek, offset=0, char=" ", text=txtFriday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(not showShortText and displayDayTxt and dayofweek == dayofweek.friday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtFriday, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

// SHORT DAY NAME
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.monday and isCurrentWeek, offset=0, char=" ", text=txtMondayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.monday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtMondayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.tuesday and isCurrentWeek, offset=0, char=" ", text=txtTuesdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.tuesday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtTuesdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.wednesday and isCurrentWeek, offset=0, char=" ", text=txtWednesdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.wednesday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtWednesdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.thursday and isCurrentWeek, offset=0, char=" ", text=txtThursdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.thursday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtThursdayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.friday and isCurrentWeek, offset=0, char=" ", text=txtFridayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)
plotchar(showShortText and displayDayTxt and dayofweek == dayofweek.friday and not isCurrentWeek and not showOnlyCurrentWeek, offset=0, char=" ", text=txtFridayShort, color=colorText, location=positionDaysOfWeek, textcolor=colorText, editable=false, display=display.all - display.status_line)

var int dayCount = 0
if dayofweek == dayofweek.monday
    dayCount := 0
if dayofweek == dayofweek.tuesday
    dayCount := 1
if dayofweek == dayofweek.wednesday
    dayCount := 2
if dayofweek == dayofweek.thursday
    dayCount := 3
if dayofweek == dayofweek.friday
    dayCount := 4
if dayofweek == dayofweek.saturday
    dayCount := 5
if dayofweek == dayofweek.sunday
    dayCount := 6

if showOnlyCurrentWeek
    cleanOldDrawings(dayCount, midnightOpenTime)
